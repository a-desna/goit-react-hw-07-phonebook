{"version":3,"sources":["styles/ContainerTheme.module.css","styles/Phonebook.module.css","redux/contacts/contactsActions.js","redux/contacts/contactsReducer.js","redux/store.js","utils/localStorage.js","context/ThemeContext.jsx","hoc/withTheme.js","common/Container.jsx","redux/contacts/contactsOperations.js","redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/ContactFilter/ContactFilter.jsx","components/Loader/Loader.jsx","components/Phonebook/Phonebook.jsx","components/App.jsx","index.js"],"names":["module","exports","addContactRequest","createAction","addContactSuccess","addContactFailure","getContactRequest","getContactSuccess","getContactFailure","deleteContactRequest","deleteContactSuccess","deleteContactFailure","filterContacts","initialState","items","filter","isLoading","createReducer","contactsActions","state","payload","contact","id","loading","combineReducers","store","configureStore","reducer","contacts","contactsReducer","key","value","serializedState","JSON","stringify","localStorage","setItem","err","console","error","getItem","undefined","parse","themeConfig","light","backgroundColor","contentColor","dark","Context","createContext","ThemeContext","theme","toggleTheme","setState","saveTheme","localStorageData","loadTheme","persistedTheme","this","Provider","checked","config","onToggle","props","children","Component","Consumer","withTheme","WrappedComponent","ctx","className","styles","container","style","background","color","toolbar","themeSwitch","aria-hidden","data-prefix","data-icon","role","xmlns","viewBox","themeSwitchIcon","fill","d","switch","switchInput","type","onChange","name","switchLabel","htmlFor","switchMarker","axios","defaults","baseURL","addContact","number","dispatch","post","then","data","catch","getContact","get","deleteContact","delete","getContacts","getFilter","getLoading","getFilteredContacts","createSelector","toLowerCase","includes","getContactById","contactId","find","ContactForm","notify","message","toast","warn","handleSubmit","e","preventDefault","target","elements","some","onAddContact","handleInputChange","form","onSubmit","placeholder","formBtn","mapDispatchToProps","contactsOperations","connect","contactsSelectors","ownProps","onDelete","listItem","listItemName","listItemNumber","listItemBtn","onClick","list","map","onChangeFilter","filterForm","Loader","height","width","Phonebook","onGetContacts","isLoadingContacts","phonebook","title","length","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d7d5149.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContainerTheme_container__WcG9R\",\"toolbar\":\"ContainerTheme_toolbar__3Ul0d\",\"themeSwitch\":\"ContainerTheme_themeSwitch__26lP_\",\"themeSwitchIcon\":\"ContainerTheme_themeSwitchIcon__3gkWB\",\"switch\":\"ContainerTheme_switch__2iPp0\",\"switchInput\":\"ContainerTheme_switchInput__1Qt_9\",\"switchLabel\":\"ContainerTheme_switchLabel__1h-Ha\",\"switchMarker\":\"ContainerTheme_switchMarker__gIzn5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebook\":\"Phonebook_phonebook__37-X0\",\"title\":\"Phonebook_title__2gP6M\",\"form\":\"Phonebook_form__1R5HV\",\"formBtn\":\"Phonebook_formBtn__2Z8mr\",\"filterForm\":\"Phonebook_filterForm__1Rl9Z\",\"list\":\"Phonebook_list__3s2MC\",\"listItem\":\"Phonebook_listItem__36E5m\",\"listItemName\":\"Phonebook_listItemName__1wGrI\",\"listItemNumber\":\"Phonebook_listItemNumber__1hi5B\",\"listItemBtn\":\"Phonebook_listItemBtn__2MJ7H\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContactRequest = createAction('contacts/addRequest');\r\nconst addContactSuccess = createAction('contacts/addSuccess');\r\nconst addContactFailure = createAction('contacts/addFailure');\r\n\r\nconst getContactRequest = createAction('contacts/getRequest');\r\nconst getContactSuccess = createAction('contacts/getSuccess');\r\nconst getContactFailure = createAction('contacts/getFailure');\r\n\r\nconst deleteContactRequest = createAction('contacts/deleteRequest');\r\nconst deleteContactSuccess = createAction('contacts/deleteSuccess');\r\nconst deleteContactFailure = createAction('contacts/deleteFailure');\r\n\r\nconst filterContacts = createAction('contacts/filterContacts');\r\n\r\nexport default {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactFailure,\r\n  getContactRequest,\r\n  getContactSuccess,\r\n  getContactFailure,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactFailure,\r\n  filterContacts,\r\n};\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport contactsActions from './contactsActions';\r\n\r\nconst initialState = {\r\n  contacts: {\r\n    items: [],\r\n    filter: '',\r\n    isLoading: false,\r\n  },\r\n};\r\n\r\nconst addContact = (state, { payload }) => {\r\n  return [...state, payload];\r\n};\r\n\r\nconst deleteContact = (state, { payload }) => {\r\n  return state.filter(contact => contact.id !== payload);\r\n};\r\n\r\nconst items = createReducer(initialState.contacts.items, {\r\n  [contactsActions.getContactSuccess]: (state, { payload }) => payload,\r\n  [contactsActions.addContactSuccess]: addContact,\r\n  [contactsActions.deleteContactSuccess]: deleteContact,\r\n});\r\n\r\nconst filter = createReducer(initialState.contacts.filter, {\r\n  [contactsActions.filterContacts]: (state, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(initialState.contacts.isLoading, {\r\n  [contactsActions.addContactRequest]: () => true,\r\n  [contactsActions.addContactSuccess]: () => false,\r\n  [contactsActions.addContactFailure]: () => false,\r\n  [contactsActions.getContactRequest]: () => true,\r\n  [contactsActions.getContactSuccess]: () => false,\r\n  [contactsActions.getContactFailure]: () => false,\r\n  [contactsActions.deleteContactSuccess]: () => false,\r\n  [contactsActions.deleteContactFailure]: () => false,\r\n  [contactsActions.deleteContactRequest]: () => true,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contacts/contactsReducer';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","const saveData = (key, value) => {\r\n  try {\r\n    const serializedState = JSON.stringify(value);\r\n    localStorage.setItem(key, serializedState);\r\n  } catch (err) {\r\n    console.error('Set state error: ', err);\r\n  }\r\n};\r\n\r\nconst loadData = key => {\r\n  try {\r\n    const serializedState = localStorage.getItem(key);\r\n\r\n    return serializedState === null ? undefined : JSON.parse(serializedState);\r\n  } catch (err) {\r\n    console.error('Get state error: ', err);\r\n  }\r\n};\r\n\r\nexport default { saveData, loadData };\r\n","import React, { createContext, Component } from 'react';\r\nimport localStorageData from '../utils/localStorage';\r\n\r\nconst themeConfig = {\r\n  light: {\r\n    backgroundColor: '#fff',\r\n    contentColor: '#333333',\r\n  },\r\n  dark: {\r\n    backgroundColor: '#333333',\r\n    contentColor: '#fff',\r\n  },\r\n};\r\n\r\nconst Context = createContext();\r\n\r\nexport default class ThemeContext extends Component {\r\n  static Consumer = Context.Consumer;\r\n  state = {\r\n    theme: 'light',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadTheme();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.saveTheme();\r\n  }\r\n\r\n  toggleTheme = () => {\r\n    this.setState({\r\n      theme: this.state.theme === 'dark' ? 'light' : 'dark',\r\n    });\r\n  };\r\n\r\n  saveTheme = () => {\r\n    localStorageData.saveData('theme', this.state.theme);\r\n  };\r\n\r\n  loadTheme = () => {\r\n    const persistedTheme = localStorageData.loadData('theme');\r\n    if (persistedTheme) {\r\n      this.setState({ theme: persistedTheme });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider\r\n        value={{\r\n          checked: this.state.theme,\r\n          config: themeConfig[this.state.theme],\r\n          onToggle: this.toggleTheme,\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport ThemeContext from '../context/ThemeContext';\r\n\r\nconst withTheme = WrappedComponent => {\r\n  return class withTheme extends Component {\r\n    render() {\r\n      return (\r\n        <ThemeContext.Consumer>\r\n          {ctx => <WrappedComponent {...this.props} theme={ctx} />}\r\n        </ThemeContext.Consumer>\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport default withTheme;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withTheme from '../hoc/withTheme';\r\n\r\nimport styles from '../styles/ContainerTheme.module.css';\r\n\r\nclass Container extends Component {\r\n  static propTypes = {\r\n    theme: PropTypes.shape({\r\n      checked: PropTypes.string,\r\n      onToggle: PropTypes.func,\r\n      config: PropTypes.objectOf(PropTypes.string),\r\n    }).isRequired,\r\n    children: PropTypes.object,\r\n  };\r\n\r\n  render() {\r\n    const { theme, children } = this.props;\r\n\r\n    return (\r\n      <div\r\n        className={styles.container}\r\n        // className={\r\n        //   theme.type === \"light\"\r\n        //     ? `${styles.lightTheme}`\r\n        //     : `${styles.darkTheme}`\r\n        // }\r\n        style={{\r\n          background: theme.config.backgroundColor,\r\n          color: theme.config.contentColor,\r\n        }}\r\n      >\r\n        <div className={styles.toolbar}>\r\n          <div className={styles.themeSwitch}>\r\n            <svg\r\n              aria-hidden=\"true\"\r\n              data-prefix=\"fas\"\r\n              data-icon=\"sun\"\r\n              role=\"img\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 512 512\"\r\n              className={styles.themeSwitchIcon}\r\n            >\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M256 160c-52.9 0-96 43.1-96 96s43.1 96 96 96 96-43.1 96-96-43.1-96-96-96zm246.4 80.5l-94.7-47.3 33.5-100.4c4.5-13.6-8.4-26.5-21.9-21.9l-100.4 33.5-47.4-94.8c-6.4-12.8-24.6-12.8-31 0l-47.3 94.7L92.7 70.8c-13.6-4.5-26.5 8.4-21.9 21.9l33.5 100.4-94.7 47.4c-12.8 6.4-12.8 24.6 0 31l94.7 47.3-33.5 100.5c-4.5 13.6 8.4 26.5 21.9 21.9l100.4-33.5 47.3 94.7c6.4 12.8 24.6 12.8 31 0l47.3-94.7 100.4 33.5c13.6 4.5 26.5-8.4 21.9-21.9l-33.5-100.4 94.7-47.3c13-6.5 13-24.7.2-31.1zm-155.9 106c-49.9 49.9-131.1 49.9-181 0-49.9-49.9-49.9-131.1 0-181 49.9-49.9 131.1-49.9 181 0 49.9 49.9 49.9 131.1 0 181z\"\r\n              ></path>\r\n            </svg>\r\n            <div className={styles.switch}>\r\n              <input\r\n                className={styles.switchInput}\r\n                type=\"checkbox\"\r\n                checked={theme.checked === 'dark'}\r\n                onChange={theme.onToggle}\r\n                name=\"theme\"\r\n                id=\"theme-switch-control\"\r\n              />\r\n              <label\r\n                aria-hidden=\"true\"\r\n                className={styles.switchLabel}\r\n                htmlFor=\"theme-switch-control\"\r\n              >\r\n                On\r\n              </label>\r\n              <div aria-hidden=\"true\" className={styles.switchMarker}></div>\r\n            </div>\r\n            <svg\r\n              aria-hidden=\"true\"\r\n              data-prefix=\"fas\"\r\n              data-icon=\"moon\"\r\n              role=\"img\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 512 512\"\r\n              className={styles.themeSwitchIcon}\r\n            >\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M283.211 512c78.962 0 151.079-35.925 198.857-94.792 7.068-8.708-.639-21.43-11.562-19.35-124.203 23.654-238.262-71.576-238.262-196.954 0-72.222 38.662-138.635 101.498-174.394 9.686-5.512 7.25-20.197-3.756-22.23A258.156 258.156 0 0 0 283.211 0c-141.309 0-256 114.511-256 256 0 141.309 114.511 256 256 256z\"\r\n              ></path>\r\n            </svg>\r\n          </div>\r\n        </div>\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTheme(Container);\r\n","import axios from 'axios';\r\nimport contactsActions from './contactsActions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:8080';\r\n\r\nconst addContact = ({ name, number }) => dispatch => {\r\n  dispatch(contactsActions.addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', { name, number })\r\n    .then(({ data }) => dispatch(contactsActions.addContactSuccess(data)))\r\n    .catch(error => dispatch(contactsActions.addContactFailure(error)));\r\n};\r\n\r\nconst getContact = () => dispatch => {\r\n  dispatch(contactsActions.getContactRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(contactsActions.getContactSuccess(data)))\r\n    .catch(error => dispatch(contactsActions.getContactFailure(error)));\r\n};\r\n\r\nconst deleteContact = id => dispatch => {\r\n  dispatch(contactsActions.deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(contactsActions.deleteContactSuccess(id)))\r\n    .catch(error => dispatch(contactsActions.deleteContactFailure(error)));\r\n};\r\n\r\nexport default {\r\n  addContact,\r\n  getContact,\r\n  deleteContact,\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getContacts = state => state.contacts.items;\r\n\r\nconst getLoading = state => state.contacts.loading;\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  },\r\n);\r\n\r\nconst getContactById = createSelector(\r\n  [getContacts, (state, contactId) => contactId],\r\n  (contacts, contactId) => contacts.find(contact => contact.id === contactId),\r\n);\r\n\r\nexport default {\r\n  getContacts,\r\n  getLoading,\r\n  getFilter,\r\n  getFilteredContacts,\r\n  getContactById,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport contactsOperations from '../../redux/contacts/contactsOperations';\r\nimport contactsSelectors from '../../redux/contacts/contactsSelectors';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport styles from '../../styles/Phonebook.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  notify = message => toast.warn(message);\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (\r\n      e.target.elements.name.value === '' ||\r\n      e.target.elements.number.value === ''\r\n    ) {\r\n      this.notify('Not all data entered !');\r\n      return;\r\n    }\r\n    const { contacts } = this.props;\r\n    if (contacts.some(contact => contact.name === this.state.name)) {\r\n      this.notify(`\"${this.state.name}\" is already in contacts !`);\r\n      return;\r\n    }\r\n    this.props.onAddContact(this.state);\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.form} onSubmit={this.handleSubmit}>\r\n        <p>Name contact</p>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Name..\"\r\n          value={name}\r\n          onChange={this.handleInputChange}\r\n        />\r\n        <p>Number contact</p>\r\n        <input\r\n          type=\"text\"\r\n          name=\"number\"\r\n          placeholder=\"Number..\"\r\n          value={number}\r\n          onChange={this.handleInputChange}\r\n        />\r\n        <button className={styles.formBtn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: contactsSelectors.getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: contactsOperations.addContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport contactsSelectors from '../../redux/contacts/contactsSelectors';\r\nimport contactsOperations from '../../redux/contacts/contactsOperations';\r\nimport styles from '../../styles/Phonebook.module.css';\r\n\r\nfunction ContactItem({ name, number, onDelete }) {\r\n  return (\r\n    <li className={styles.listItem}>\r\n      <span className={styles.listItemName}>{name}:</span>\r\n      <span className={styles.listItemNumber}>{number}</span>\r\n      <button className={styles.listItemBtn} onClick={onDelete}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContactItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const contact = contactsSelectors.getContactById(state, ownProps.id);\r\n  return {\r\n    ...contact,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  onDelete: () => dispatch(contactsOperations.deleteContact(ownProps.id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactItem);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport ContactItem from '../ContactItem/ContactItem';\r\nimport contactsSelectors from '../../redux/contacts/contactsSelectors';\r\nimport styles from '../../styles/Phonebook.module.css';\r\n\r\nfunction ContactList({ contacts }) {\r\n  return (\r\n    <ul className={styles.list}>\r\n      {contacts.map(({ id }) => (\r\n        <ContactItem key={id} id={id} />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: contactsSelectors.getFilteredContacts(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contactsActions';\r\nimport contactsSelectors from '../../redux/contacts/contactsSelectors';\r\nimport styles from '../../styles/Phonebook.module.css';\r\n\r\nfunction ContactFilter({ filter, onChangeFilter }) {\r\n  return (\r\n    <div className={styles.filterForm}>\r\n      <label>\r\n        <p>Find contact by name</p>\r\n        <input\r\n          type=\"text\"\r\n          value={filter}\r\n          onChange={e => onChangeFilter(e.target.value)}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nContactFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filter: contactsSelectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onChangeFilter: contactsActions.filterContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactFilter);\r\n","import React, { Component } from 'react';\r\nimport LoaderSpinner from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nclass Loader extends Component {\r\n  render() {\r\n    return (\r\n      <LoaderSpinner\r\n        type=\"ThreeDots\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        // timeout={3000}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Loader;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport ContactForm from '../ContactForm/ContactForm';\r\nimport ContactList from '../ContactList/ContactList';\r\nimport ContactFilter from '../ContactFilter/ContactFilter';\r\nimport Loader from '../Loader/Loader';\r\nimport contactsOperations from '../../redux/contacts/contactsOperations';\r\nimport contactsSelectors from '../../redux/contacts/contactsSelectors';\r\n\r\nimport { ToastContainer } from 'react-toastify';\r\nimport styles from '../../styles/Phonebook.module.css';\r\n\r\nclass Phonebook extends Component {\r\n  static propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.onGetContacts();\r\n  }\r\n\r\n  render() {\r\n    const { contacts, isLoadingContacts } = this.props;\r\n    return (\r\n      <div className={styles.phonebook}>\r\n        <h1 className={styles.title}>Phonebook</h1>\r\n        <ContactForm />\r\n        <h2 className={styles.title}>Contacts</h2>\r\n        {contacts.length >= 2 && <ContactFilter />}\r\n        {contacts.length > 0 && <ContactList />}\r\n        {isLoadingContacts && <Loader />}\r\n        <ToastContainer\r\n          position=\"top-center\"\r\n          autoClose={5000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: contactsSelectors.getContacts(state),\r\n  isLoadingContacts: contactsSelectors.getLoading(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onGetContacts: contactsOperations.getContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\r\n","import React, { Fragment } from 'react';\r\nimport ThemeContext from '../context/ThemeContext';\r\nimport Container from '../common/Container';\r\nimport Phonebook from './Phonebook/Phonebook';\r\n\r\nfunction App() {\r\n  return (\r\n    <Fragment>\r\n      <ThemeContext>\r\n        <Container>\r\n          <Phonebook />\r\n        </Container>\r\n      </ThemeContext>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './components/App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}